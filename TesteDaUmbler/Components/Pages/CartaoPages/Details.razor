@page "/cartoes/details"

@using Microsoft.EntityFrameworkCore
@using TesteDaUmbler.Models
@using TesteDaUmbler.Data
@inject AppDbContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Detalhes</h1>

<div>
    <h4>Cartao</h4>
    <hr />
    @if (cartao is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Número Do Cartão</dt>
            <dd class="col-sm-10">@cartao.NumeroDoCartao</dd>
            <dt class="col-sm-2">CVC</dt>
            <dd class="col-sm-10">@cartao.Cvc</dd>
            <dt class="col-sm-2">Validade</dt>
            <dd class="col-sm-10">@cartao.Validade</dd>
            <dt class="col-sm-2">Nome No Cartão</dt>
            <dd class="col-sm-10">@cartao.NomeNoCartao</dd>
        </dl>
        <div>
            <a href="@($"/cartoes/edit?id={cartao.Id}")">Editar</a> |
            <a href="@($"/cartoes")">Voltar pra lista</a>
        </div>
    }
</div>

@code {
    Cartao? cartao;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        cartao = await DbContext.Cartoes.FirstOrDefaultAsync(m => m.Id == Id);

        if (cartao is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
